class Solution {
	public int snakesAndLadders(int[][] board) {
        int [] arr = convert(board);
        boolean [] visited = new boolean[arr.length + 1];
        ArrayList<Integer> que = new ArrayList<Integer>();
        int min =0;

        que.add(0);

        while(que.size() != 0)
        {
            int size = que.size();
            for(int i =0; i<size; i++)
            {
                int x = que.remove(0);

                if( !visited[x])
                {
                    if(x== arr.length-1)
                    {
                        return min;
                    }

                    for(int j = x + 1; j< x+7; j++ )
                    {
                        if(j<arr.length)
                        {
                            if(arr[j] == -1)
                            {
                                que.add(j);
                            }
                            else
                            {
                                que.add(arr[j]-1);
                            }

                        }
                    }
                }
                
                   visited[x] = true;
                

            }

            min++;

        }

        return -1;


    }

    public int [] convert (int [][] board)
    {
        int [] arr = new int[board.length*board.length];
        int c = 0;
        for(int i =0; i<board.length; i++)
        {
            
            if(i%2 == 0)
            {
                for(int j=0; j<board.length; j++)
                {
                    arr[c] = board[board.length-i-1][j];
                    c++;
                }
            }
            else
            {
                for(int j=board.length-1; j>=0; j--)
                {
                    arr[c] = board[board.length-i-1][j];
                    c++;
                }
            }
        }

        return arr;
    }
		
    
}
